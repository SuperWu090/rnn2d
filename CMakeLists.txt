CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(rnn2d)

ENABLE_TESTING()

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -Wall -pedantic")

FIND_PACKAGE(BLAS REQUIRED)
FIND_PACKAGE(Glog REQUIRED)
FIND_PACKAGE(GTest)
FIND_PACKAGE(GMock)
FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
ENDIF()
FIND_PACKAGE(CUDA)

OPTION(USE_CUDA "Compile binaries with CUDA support" ON)

IF(CUDA_FOUND AND USE_CUDA)
ADD_DEFINITIONS(-DUSE_CUDA)
SET(CUDA_PROPAGATE_HOST_FLAGS OFF)
SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -std=c++11 -Xcompiler -Wall")
ENDIF()

IF(GTEST_FOUND AND GMOCK_FOUND)
  INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})
  INCLUDE_DIRECTORIES(${GMOCK_INCLUDE_DIRS})
  INCLUDE_DIRECTORIES(${GLOG_INCLUDE_DIRS})

  ADD_EXECUTABLE(lstm_cpu_test lstm_cpu_test.cc)
  TARGET_LINK_LIBRARIES(lstm_cpu_test
    ${BLAS_LIBRARIES} ${GMOCK_MAIN_LIBRARIES})
  GTEST_ADD_TESTS(lstm_cpu_test "" lstm_cpu_test.cc)

  IF (CUDA_FOUND AND USE_CUDA)
    CUDA_ADD_EXECUTABLE(lstm_gpu_test lstm_gpu_test.cu)
    CUDA_ADD_CUBLAS_TO_TARGET(lstm_gpu_test)
    TARGET_LINK_LIBRARIES(lstm_gpu_test
      ${GLOG_LIBRARIES} ${GMOCK_MAIN_LIBRARIES})
  ENDIF()
ENDIF()
