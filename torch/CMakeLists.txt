FIND_PACKAGE(Torch)

IF (TORCH_FOUND AND WITH_TORCH)
  INCLUDE_DIRECTORIES(
    ${TORCH_INCLUDE_DIRS}
    ${TORCH_INCLUDE_DIRS}/TH
    ${TORCH_INCLUDE_DIRS}/THC
    ${CMAKE_CURRENT_SOURCE_DIR})

  ADD_LIBRARY(rnn2d_torch MODULE
    binding.cc
    utils.c utils.h)
  TARGET_LINK_LIBRARIES(rnn2d_torch rnn2d_cpu ${TORCH_LIBRARIES})

  SET(REQUIRE_CUTORCH "")
  IF (CUDA_FOUND AND WITH_CUDA)
    FIND_LIBRARY(CUTORCH_LIBRARY THC ${TORCH_ROOT}/lib)
    MARK_AS_ADVANCED(CUTORCH_LIBRARY)
    IF (NOT CUTORCH_LIBRARY)
      MESSAGE(FATAL_ERROR "cutorch (THC) library was not found!")
    ENDIF()

    TARGET_COMPILE_DEFINITIONS(rnn2d_torch PRIVATE WITH_CUDA)
    CUDA_ADD_CUBLAS_TO_TARGET(rnn2d_torch)
    TARGET_LINK_LIBRARIES(rnn2d_torch rnn2d_gpu ${CUTORCH_LIBRARY})
    SET(REQUIRE_CUTORCH "require 'cutorch'")
  ENDIF()

  INSTALL(TARGETS rnn2d_torch
    RUNTIME DESTINATION "${TORCH_BIN_PATH}"
    LIBRARY DESTINATION "${TORCH_LUALIB_PATH}")

  CONFIGURE_FILE(init.lua ${CMAKE_CURRENT_BINARY_DIR}/init.lua)
  INSTALL(FILES
    ${CMAKE_CURRENT_BINARY_DIR}/init.lua
    LSTM.lua
    DESTINATION "${TORCH_LUA_PATH}/rnn2d")
ENDIF()
